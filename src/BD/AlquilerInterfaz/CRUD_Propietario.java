/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BD.AlquilerInterfaz;


import BD.AlquilerCasas.Clases.Cliente;
import BD.AlquilerCasas.Clases.Propietario;
import BD.AlquilerCasas.Clases.Validaciones;
import static BD.AlquilerInterfaz.CRUD_Clientes.mipersonaList;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author USER
 */
public class CRUD_Propietario extends javax.swing.JPanel {
    
    ObjectContainer BaseD = Db4o.openFile(dashboard.direccionBD);
    
  public static ArrayList<Propietario> mipropiList = new ArrayList<>();
    char GeneroPersona;
    boolean discapacidad;
    String ced_profesor = "";
    String CedulaPropietario = "";
    String NombrePropietario = "";
    String ApellidoPropietario = "";
    char GeneroPropietario = '0';
    int EdadPropietario = 0;
    String TelfoPropietario = "";
    String correo_propi = "";
    String nacionalidad_propi = ""; 
    Date fecha_Naci ;
    
    /**
     * Creates new form CRUD_Propietario
     */
    public CRUD_Propietario() {
        initComponents();
        CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrupSexo = new javax.swing.ButtonGroup();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Tfieldcedu = new javax.swing.JTextField();
        btncargardatos = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TfieldCorreo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Tfieldnomb = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbboxNacionalidad = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Tfieldape = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDnacimiento = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        SpinnerEdad = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        btnH = new javax.swing.JRadioButton();
        btnM = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        TelfPropietario = new javax.swing.JTextField();
        btningresar = new javax.swing.JButton();
        btnconsul = new javax.swing.JButton();
        btnmod = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnreport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersona = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("REGISTRO PROPIETARIOS");

        jLabel1.setText("Cedula:");

        btncargardatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        btncargardatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncargardatosActionPerformed(evt);
            }
        });

        jLabel6.setText("Correo:");

        jLabel2.setText("Nombre:");

        jLabel5.setText("Nacionalidad:");

        cbboxNacionalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ecuatoriano", "Mexicano", "Canadiense", "Brasileño", "Ucraniana", "Británica", "Escocesa", "Finlandesa", "Austriaca", "Rusa", "Española" }));

        jLabel3.setText("Apellido:");

        jLabel12.setText("Fecha Nacimiento:");

        jLabel4.setText("Edad:");

        SpinnerEdad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jLabel8.setText("Sexo:");

        btngrupSexo.add(btnH);
        btnH.setText("Hombre");
        btnH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHActionPerformed(evt);
            }
        });

        btngrupSexo.add(btnM);
        btnM.setText("mujer");

        jLabel9.setText("Celular:");

        btningresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/sav.png"))); // NOI18N
        btningresar.setText("GUARDAR");
        btningresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btningresarActionPerformed(evt);
            }
        });

        btnconsul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        btnconsul.setText("CONSULTAR");
        btnconsul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsulActionPerformed(evt);
            }
        });

        btnmod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mod.png"))); // NOI18N
        btnmod.setText("MODIFICAR");
        btnmod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodActionPerformed(evt);
            }
        });

        btneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btneliminar.setText("ELIMINAR");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/informe.png"))); // NOI18N
        btnreport.setText("REPORTE");
        btnreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreportActionPerformed(evt);
            }
        });

        jTablePersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Apellido", "Edad", "Sexo", "Celular", "Correo", "Nacionalidad", "Fecha Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePersona);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(4, 4, 4)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Tfieldape, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Tfieldnomb, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnH)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnM))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(SpinnerEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)
                                            .addComponent(jDnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbboxNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(TelfPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Tfieldcedu, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(28, 28, 28)
                                                    .addComponent(btncargardatos)
                                                    .addGap(102, 102, 102)
                                                    .addComponent(jLabel6)
                                                    .addGap(23, 23, 23)
                                                    .addComponent(TfieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(btningresar)
                                .addGap(18, 18, 18)
                                .addComponent(btnconsul)
                                .addGap(18, 18, 18)
                                .addComponent(btnmod)
                                .addGap(18, 18, 18)
                                .addComponent(btneliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnreport)))
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Tfieldcedu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(btncargardatos)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(TfieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Tfieldnomb, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tfieldape, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbboxNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(38, 38, 38)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SpinnerEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jLabel12)
                    .addComponent(jDnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(btnH)
                        .addComponent(btnM))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TelfPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btningresar)
                    .addComponent(btnconsul)
                    .addComponent(btnmod)
                    .addComponent(btneliminar)
                    .addComponent(btnreport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btncargardatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncargardatosActionPerformed
        // TODO add your handling code here:
        btningresar.setEnabled(false);
        Tfieldcedu.setEditable(false);
        boolean encontrado = false;
        if (mipropiList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No tiene datos de personas");
            Tfieldcedu.setEditable(true);
            btningresar.setEnabled(true);
        } else {
            for (int i = 0; i < mipropiList.size(); i++) {
                if (mipropiList.get(i).getCedulaPropietario().equals(Tfieldcedu.getText())) {
                    JOptionPane.showMessageDialog(this, "Si existe esa persona");
                    encontrado = true;

                    Propietario personaCargar = mipropiList.get(i);
                    Tfieldnomb.setText(personaCargar.getNombrePropietario());
                    Tfieldape.setText(personaCargar.getApellidoPropietario());
                    //mipersona.setEdad((Integer) SpinnerEdad.getValue());
                    // SpinnerEdad.setValue(String.valueOf((Integer) personaCargar.getEdad()));
                    SpinnerEdad.getModel().setValue(personaCargar.getEdadPropietario());

                    // Cargar otros campos según corresponda
                    if (personaCargar.getGeneroPropietario() == 'H') {
                        btnH.setSelected(true);
                    } else if (personaCargar.getGeneroPropietario() == 'M') {
                        btnM.setSelected(true);
                    }
                    TelfPropietario.setText(personaCargar.getTelfPropietario());
                    TfieldCorreo.setText(personaCargar.getCorreo_propi());
                    
                    cbboxNacionalidad.setSelectedItem(personaCargar.getNacionalidad_propi());
                    jDnacimiento.setDate(personaCargar.getFecha_Naci());

                    break;
                }

            }
            if (!encontrado) {
                JOptionPane.showMessageDialog(this, "No se encontro a esa persona");
                Tfieldcedu.setEditable(true);
                btningresar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btncargardatosActionPerformed

    private void btnHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHActionPerformed

    private void btningresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btningresarActionPerformed
        // TODO add your handling code here:

        try {
            Propietario mipersona = new Propietario();
            
            
            String cedula;
            do {
                cedula = Tfieldcedu.getText();
                if (!Validaciones.ValidarCedula(cedula)) {
                    JOptionPane.showMessageDialog(this, "Cédula incorrecta. Ingrese de nuevo");
                    return; // me regresa al formulario para ingresar de nuevo
                }
            } while (!Validaciones.ValidarCedula(cedula));
            mipersona.setCedulaPropietario(cedula);

            String nombre; // varible que asigno al dato de textfield
            do {
                nombre = Tfieldnomb.getText();
                if (!Validaciones.ValidarNomApe(nombre)) {
                    JOptionPane.showMessageDialog(this, "Nombre incorrecto. Ingrese de nuevo");
                    return;
                }
            } while (!Validaciones.ValidarNomApe(nombre));
            mipersona.setNombrePropietario(nombre);

            String apellido;
            do {
                apellido = Tfieldape.getText();
                if (!Validaciones.ValidarNomApe(apellido)) {
                    JOptionPane.showMessageDialog(this, "Apellido incorrecto. Ingrese de nuevo");
                    return;
                }
            } while (!Validaciones.ValidarNomApe(apellido));
            mipersona.setApellidoPropietario(apellido);

            mipersona.setEdadPropietario((Integer) SpinnerEdad.getValue());

            if (btnH.isSelected()) {
                GeneroPersona = 'H';
            } else if (btnM.isSelected()) {
                GeneroPersona = 'M';
            }
            mipersona.setGeneroPropietario(GeneroPersona);

            String celular;
            do {
                celular = TelfPropietario.getText();
                if (!Validaciones.ValidarCedula(celular)) {
                    JOptionPane.showMessageDialog(this, "# Celular no valido. Ingrese de nuevo");
                    return;
                }
            } while (!Validaciones.ValidarCedula(celular));
            mipersona.setTelfPropietario(celular);

            String correo;
            do {
                correo = TfieldCorreo.getText();
                if (!Validaciones.ValidarCorreo(correo)) {
                    JOptionPane.showMessageDialog(this, "Correo no valido. Ingrese de nuevo");
                    return;
                }
            } while (!Validaciones.ValidarCorreo(correo));
            mipersona.setCorreo_propi(correo);

            /* mipersona.setTipoSangre(cbBoxSangre.getSelectedItem().toString());

            if (CHBOXDisca.isSelected()) {
                mipersona.setDiscapacidad(true);
            } else {
                mipersona.setDiscapacidad(false);
            }*/
            mipersona.setNacionalidad_propi((String) cbboxNacionalidad.getSelectedItem());

            // Obtener fecha de nacimiento del JCalendar
            Date fechaNacimiento = jDnacimiento.getDate();
            mipersona.setFecha_Naci(fechaNacimiento);

            mipropiList.add(mipersona);
            JOptionPane.showMessageDialog(this, "Persona creada exitosamente");

            CargarTabla();

            Tfieldcedu.setText("");
            Tfieldnomb.setText("");
            Tfieldape.setText("");
            TfieldCorreo.setText("");
            TelfPropietario.setText("");
            btngrupSexo.clearSelection();

            jDnacimiento.setDate(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Los campos están vacíos");
        }
    }//GEN-LAST:event_btningresarActionPerformed

    private void btnconsulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsulActionPerformed
        // TODO add your handling code here:
        boolean encontrado = false;
        if (mipropiList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No tiene datos de personas");
        } else {
            DefaultTableModel model = (DefaultTableModel) jTablePersona.getModel();
            model.setRowCount(0); // Limpiar la tabla
            for (int i = 0; i < mipropiList.size(); i++) {
                if (mipropiList.get(i).getCedulaPropietario().equals(Tfieldcedu.getText())) {
                    JOptionPane.showMessageDialog(this, "Si existe esa persona");
                    encontrado = true;

                    Propietario persona = mipropiList.get(i);
                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                    model.addRow(new Object[]{
                        persona.getCedulaPropietario(),
                        persona.getNombrePropietario(),
                        persona.getApellidoPropietario(),
                        persona.getEdadPropietario(),
                        persona.getGeneroPropietario(),
                        persona.getTelfPropietario(),
                        persona.getCorreo_propi(),
                        persona.getNacionalidad_propi(),
                        persona.getFecha_Naci()
                    });
                    break;//deja de buscar
                }
            }
            if (!encontrado) {
                JOptionPane.showMessageDialog(this, "No se encontro a la persona");
                CargarTabla();
            }
            Tfieldcedu.setText("");
        }
    }//GEN-LAST:event_btnconsulActionPerformed

    private void btnmodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodActionPerformed
        // TODO add your handling code here:

        Propietario mipersonamod = null;
        boolean encontrado = false;

        if (mipropiList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No tiene datos de personas");
        } else {
            for (int i = 0; i < mipropiList.size(); i++) {
                if (mipropiList.get(i).getCedulaPropietario().equals(Tfieldcedu.getText())) {

                    encontrado = true;

                    mipersonamod = mipropiList.get(i);

                    String nombre; // variable que asigno al dato del textfield
                    do {
                        nombre = Tfieldnomb.getText();
                        if (!Validaciones.ValidarNomApe(nombre)) {
                            JOptionPane.showMessageDialog(this, "Nombre incorrecto. Ingrese de nuevo");
                            return;
                        }
                    } while (!Validaciones.ValidarNomApe(nombre));
                    mipersonamod.setNombrePropietario(nombre);

                    String apellido;
                    do {
                        apellido = Tfieldape.getText();
                        if (!Validaciones.ValidarNomApe(apellido)) {
                            JOptionPane.showMessageDialog(this, "Apellido incorrecto. Ingrese de nuevo");
                            return;
                        }
                    } while (!Validaciones.ValidarNomApe(apellido));
                    mipersonamod.setApellidoPropietario(apellido);

                    mipersonamod.setEdadPropietario((Integer) SpinnerEdad.getValue());

                    // Obtener el sexo seleccionado
                    char sexo = ' ';
                    if (btnH.isSelected()) {
                        sexo = 'H';
                    } else if (btnM.isSelected()) {
                        sexo = 'M';
                    }
                    mipersonamod.setGeneroPropietario(sexo);

                    String celular;
                    do {
                        celular = TelfPropietario.getText();
                        if (!Validaciones.ValidarCedula(celular)) {
                            JOptionPane.showMessageDialog(this, "# Celular no válido. Ingrese de nuevo");
                            return;
                        }
                    } while (!Validaciones.ValidarCedula(celular));
                    mipersonamod.setTelfPropietario(celular);

                    String correo;
                    do {
                        correo = TfieldCorreo.getText();
                        if (!Validaciones.ValidarCorreo(correo)) {
                            JOptionPane.showMessageDialog(this, "Correo no válido. Ingrese de nuevo");
                            return;
                        }
                    } while (!Validaciones.ValidarCorreo(correo));
                    mipersonamod.setCorreo_propi(correo);

                    mipersonamod.setNacionalidad_propi((String) cbboxNacionalidad.getSelectedItem());

                    // Obtener fecha de nacimiento del JCalendar
                    Date fechaNacimiento = jDnacimiento.getDate();
                    mipersonamod.setFecha_Naci(fechaNacimiento);

                    break;
                }
            }

            if (encontrado) {
                JOptionPane.showMessageDialog(this, "Persona modificada exitosamente");
                Tfieldcedu.setEditable(true);
                btningresar.setEnabled(true);
                CargarTabla();
                Tfieldcedu.setText("");
                Tfieldnomb.setText("");
                Tfieldape.setText("");
                TelfPropietario.setText("");
                TfieldCorreo.setText("");
                jDnacimiento.setDate(null);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró a esa persona");

            }
        }
    }//GEN-LAST:event_btnmodActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        int removfila = jTablePersona.getSelectedRow();
        if (removfila >= 0) {
            int confirmacion = JOptionPane.showConfirmDialog(null, "Eliminar", "¿Desea eliminar el registro?", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                mipropiList.remove(removfila);
                CargarTabla();
            }
        }
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreportActionPerformed
        // TODO add your handling code here:
        CargarTabla();
    }//GEN-LAST:event_btnreportActionPerformed
public void CargarTabla() {
        DefaultTableModel modelodefault = new DefaultTableModel(new String[]{"CEDULA", "NOMBRE", "APELLIDO", "EDAD", "SEXO", "CELULAR", "CORREO", "NACIONALIDAD", "FECHA NACI"}, mipropiList.size());
        jTablePersona.setModel(modelodefault);
        TableModel modeloDatos = jTablePersona.getModel();

        for (int i = 0; i < mipropiList.size(); i++) {
            Propietario personadat = mipropiList.get(i);
            modeloDatos.setValueAt(personadat.getCedulaPropietario(), i, 0);
            modeloDatos.setValueAt(personadat.getNombrePropietario(), i, 1);
            modeloDatos.setValueAt(personadat.getApellidoPropietario(), i, 2);
            modeloDatos.setValueAt(personadat.getEdadPropietario(), i, 3);
            modeloDatos.setValueAt(personadat.getGeneroPropietario(), i, 4);
            modeloDatos.setValueAt(personadat.getTelfPropietario(), i, 5);
            modeloDatos.setValueAt(personadat.getCorreo_propi(), i, 6);
            modeloDatos.setValueAt(personadat.getNacionalidad_propi(), i, 7);
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String fechaNacimiento = sdf.format(personadat.getFecha_Naci()); //transformo al formato dd/mm/yyyy
            modeloDatos.setValueAt(fechaNacimiento, i, 8);

        }
    }

    public static int Comprobar_Propietario(ObjectContainer baseA, String ced_propietario) {
        Propietario Pbuscar = new Propietario(ced_propietario, null, null, '0' , 0, null, null, null, null);
        ObjectSet result = baseA.get(Pbuscar);
        return result.size();
    }
    
    public void Crear_Pr(ObjectContainer baseA) {


        
    }
    
    public boolean validarCampos(ObjectContainer baseA) {
        Validaciones miValidaciones = new Validaciones();
        boolean ban_confirmar = true;
        
        if (Tfieldcedu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese una Cedula");
            ban_confirmar = false;
        } else {
            if (!miValidaciones.validarCedula(ced_profesor)) {
                JOptionPane.showMessageDialog(this, "Cedula invalida");
                ban_confirmar = false;
            }
        }
        
    
        return ban_confirmar;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner SpinnerEdad;
    private javax.swing.JTextField TelfPropietario;
    private javax.swing.JTextField TfieldCorreo;
    private javax.swing.JTextField Tfieldape;
    private javax.swing.JTextField Tfieldcedu;
    private javax.swing.JTextField Tfieldnomb;
    private javax.swing.JRadioButton btnH;
    private javax.swing.JRadioButton btnM;
    private javax.swing.JButton btncargardatos;
    private javax.swing.JButton btnconsul;
    private javax.swing.JButton btneliminar;
    private javax.swing.ButtonGroup btngrupSexo;
    private javax.swing.JButton btningresar;
    private javax.swing.JButton btnmod;
    private javax.swing.JButton btnreport;
    private javax.swing.JComboBox<String> cbboxNacionalidad;
    private com.toedter.calendar.JDateChooser jDnacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePersona;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BD.AlquilerInterfaz;

import BD.AlquilerCasas.Clases.Cliente;
import BD.AlquilerCasas.Clases.Validaciones;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.toedter.calendar.JCalendar;
import java.security.Principal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author USER
 */
public class CRUD_Clientes extends javax.swing.JPanel {

    public static ArrayList<Cliente> mipersonaList = new ArrayList<>();

    String CedulaCli = "";
    String NombreCli = "";
    String ApellidoCli = "";
    int EdadCli = 0;
    String GeneroCli = "";
    String CelularCli = "";
    String correoCli = "";
    String NacionalidadCli = "";
    Date fechaNaciCli = null;

    /**
     * Creates new form CRUD_Clientes
     */
    public CRUD_Clientes() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrupSexo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnH = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        btnM = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        cbboxNacionalidad = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jDnacimiento = new com.toedter.calendar.JDateChooser();
        btningresar = new javax.swing.JButton();
        btnmod = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersona = new javax.swing.JTable();
        btnreport = new javax.swing.JButton();
        SpinnerEdad = new javax.swing.JSpinner();
        txtcelu = new javax.swing.JTextField();
        Tfieldcedu = new javax.swing.JTextField();
        Tfieldnomb = new javax.swing.JTextField();
        Tfieldape = new javax.swing.JTextField();
        TfieldCorreo = new javax.swing.JTextField();
        btncargardatos = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        BuscarOpcion = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Cedula:");

        jLabel2.setText("Nombre:");

        jLabel6.setText("Correo:");

        jLabel3.setText("Apellido:");

        jLabel4.setText("Edad:");

        jLabel8.setText("Sexo:");

        btngrupSexo.add(btnH);
        btnH.setText("Hombre");
        btnH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHActionPerformed(evt);
            }
        });

        jLabel9.setText("Celular:");

        btngrupSexo.add(btnM);
        btnM.setText("mujer");

        jLabel5.setText("Nacionalidad:");

        cbboxNacionalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ecuatoriano", "Mexicano", "Canadiense", "Brasile침o", "Ucraniana", "Brit치nica", "Escocesa", "Finlandesa", "Austriaca", "Rusa", "Espa침ola" }));

        jLabel12.setText("Fecha Nacimiento:");

        btningresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/sav.png"))); // NOI18N
        btningresar.setText("GUARDAR");
        btningresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btningresarActionPerformed(evt);
            }
        });

        btnmod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mod.png"))); // NOI18N
        btnmod.setText("MODIFICAR");
        btnmod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodActionPerformed(evt);
            }
        });

        btneliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btneliminar.setText("ELIMINAR");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        jTablePersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Apellido", "Edad", "Sexo", "Celular", "Correo", "Nacionalidad", "Fecha Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePersona);

        btnreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/informe.png"))); // NOI18N
        btnreport.setText("REPORTE");
        btnreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreportActionPerformed(evt);
            }
        });

        SpinnerEdad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        btncargardatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda.png"))); // NOI18N
        btncargardatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncargardatosActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("REGISTRO DE CLIENTE");

        BuscarOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opci칩n", "Ver todos", "Cedula", "Buscar Parametros" }));
        BuscarOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarOpcionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(4, 4, 4)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Tfieldape, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Tfieldnomb, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnH)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnM))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(SpinnerEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)
                                            .addComponent(jDnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbboxNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtcelu, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Tfieldcedu, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(28, 28, 28)
                                                    .addComponent(btncargardatos)
                                                    .addGap(102, 102, 102)
                                                    .addComponent(jLabel6)
                                                    .addGap(23, 23, 23)
                                                    .addComponent(TfieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(btningresar)
                                .addGap(18, 18, 18)
                                .addComponent(BuscarOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnmod)
                                .addGap(18, 18, 18)
                                .addComponent(btneliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnreport)))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Tfieldcedu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(btncargardatos)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(TfieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Tfieldnomb, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tfieldape, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbboxNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(38, 38, 38)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SpinnerEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jLabel12)
                    .addComponent(jDnacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(btnH)
                        .addComponent(btnM))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcelu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BuscarOpcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btningresar)
                        .addComponent(btnmod)
                        .addComponent(btneliminar)
                        .addComponent(btnreport)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHActionPerformed

    private void btningresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btningresarActionPerformed
        // TODO add your handling code here:

        ObjectContainer BaseD = Db4o.openFile(dashboard.direccionBD);
        Crear_Cli(BaseD);
        //Cerrar_BD(BaseD);

    }//GEN-LAST:event_btningresarActionPerformed
    public void Crear_Cli(ObjectContainer basep) {
        Validaciones miValidaciones = new Validaciones();
        if (validarCampos(basep)) {
            if (!Comprobar_Cliente(basep, CedulaCli)) {
                Cliente Cnuevo = new Cliente(CedulaCli, NombreCli, ApellidoCli, GeneroCli, EdadCli, correoCli, CelularCli, NacionalidadCli, fechaNaciCli);
                basep.set(Cnuevo);
                JOptionPane.showMessageDialog(null, "El cliente se guard칩 correctamente");
                // LimpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "El cliente ya existe");
            }
            Tfieldcedu.setText("");
        }
    }

    public static boolean Comprobar_Cliente(ObjectContainer basep, String CedulaCli) {
        Cliente ejemploCliente = new Cliente(CedulaCli, null, null, null, 0, null, null, null, null);
        ObjectSet<Cliente> result = basep.queryByExample(ejemploCliente);
        return !result.isEmpty();
    }

    public void asignarVariables(ObjectContainer basep) {
        CedulaCli = Tfieldcedu.getText();
        NombreCli = Tfieldnomb.getText();
        ApellidoCli = Tfieldape.getText();
        if (btnH.isSelected()) {
            GeneroCli = "Hombre";
        }
        if (btnM.isSelected()) {
            GeneroCli = "Mujer";
        }

        CelularCli = txtcelu.getText();
        correoCli = TfieldCorreo.getText();
        EdadCli = (Integer) SpinnerEdad.getValue();
        NacionalidadCli = cbboxNacionalidad.getSelectedItem().toString();
        fechaNaciCli = jDnacimiento.getDate();
    }

    public boolean validarCampos(ObjectContainer basep) {
        Validaciones miValidaciones = new Validaciones();
        asignarVariables(basep);
        boolean ban_confirmar = true;

        if (Tfieldcedu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese la c칠dula del cliente");
            ban_confirmar = false;
        } else if (!miValidaciones.validarCedula(CedulaCli)) {
            JOptionPane.showMessageDialog(this, "C칠dula incorrecta. Ingrese de nuevo");
            ban_confirmar = false;
        }

        if (Tfieldnomb.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el nombre del cliente");
            ban_confirmar = false;
        } else if (!miValidaciones.ValidarNomApe(NombreCli)) {
            JOptionPane.showMessageDialog(this, "Nombre incorrecto. Ingrese de nuevo");
            ban_confirmar = false;
        }

        if (Tfieldape.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el apellido del cliente");
            ban_confirmar = false;
        } else if (!miValidaciones.ValidarNomApe(ApellidoCli)) {
            JOptionPane.showMessageDialog(this, "Apellido incorrecto. Ingrese de nuevo");
            ban_confirmar = false;
        }

        // Validar otros campos aqu칤...
        if (txtcelu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el celular del cliente");
            ban_confirmar = false;
        } else if (!miValidaciones.validarCedula(CelularCli)) {
            JOptionPane.showMessageDialog(this, "Celular incorrecta. Ingrese de nuevo");
            ban_confirmar = false;
        }
        if (TfieldCorreo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el correo del cliente");
            ban_confirmar = false;
        } else if (!miValidaciones.ValidarCorreo(correoCli)) {
            JOptionPane.showMessageDialog(this, "Correo incorrecto. Ingrese de nuevo");
            ban_confirmar = false;
        }
        if (cbboxNacionalidad.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Ingrese la nacionalidad del cliente");
            ban_confirmar = false;
        } else {
            if (!miValidaciones.ValidarCiudad(NacionalidadCli)) {
                JOptionPane.showMessageDialog(this, "nacionalidad invalida");
                ban_confirmar = false;
            }
        }
        return ban_confirmar;
    }

    public static void Cerrar_BD(ObjectContainer basep) {

        basep.close();
    }

    private void btnmodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnmodActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        ObjectContainer BaseD = Db4o.openFile(dashboard.direccionBD);
        Eliminar_Cliente(BaseD);
        //Cerrar_BD(BaseD);
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreportActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnreportActionPerformed
    public void CargarTabla(ObjectSet<Cliente> result) {
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El cliente no se encuentra en la base de datos");
        } else {
            DefaultTableModel modeloDatos = new DefaultTableModel(new String[]{"CEDULA", "NOMBRE", "APELLIDO", "EDAD", "SEXO", "CELULAR", "CORREO", "NACIONALIDAD", "FECHA NACI"}, result.size());
            jTablePersona.setModel(modeloDatos);

            for (int i = 0; i < result.size(); i++) {
                Cliente persona = result.get(i);
                modeloDatos.setValueAt(persona.getCedula(), i, 0);
                modeloDatos.setValueAt(persona.getNombreCliente(), i, 1);
                modeloDatos.setValueAt(persona.getApellidoCliente(), i, 2);
                modeloDatos.setValueAt(persona.getEdadCliente(), i, 3);
                modeloDatos.setValueAt(persona.getGeneroCliente(), i, 4);
                modeloDatos.setValueAt(persona.getCelular(), i, 5);
                modeloDatos.setValueAt(persona.getCorreo(), i, 6);
                modeloDatos.setValueAt(persona.getNacionalidad(), i, 7);
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String fechaNacimiento = sdf.format(persona.getFecha_Naci());
                modeloDatos.setValueAt(fechaNacimiento, i, 8);
            }
        }
    }


    private void btncargardatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncargardatosActionPerformed
        // TODO add your handling code here:
        ObjectContainer BaseD = Db4o.openFile(dashboard.direccionBD);
        Buscar_ClienteCed(BaseD);
        //Cerrar_BD(BaseD);

    }//GEN-LAST:event_btncargardatosActionPerformed

    private void BuscarOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarOpcionActionPerformed
        // TODO add your handling code here:
        if (BuscarOpcion.getSelectedIndex() == 0) {
            deshabilitarParametros();
        } else {
            if (BuscarOpcion.getSelectedIndex() == 1) {
                deshabilitarParametros();
            } else {
                if (BuscarOpcion.getSelectedIndex() == 2) {
                    deshabilitarParametros();
                } else {
                    if (BuscarOpcion.getSelectedIndex() == 3) {
                        habilitarParametros();
                    }
                }
            }
        }
    }//GEN-LAST:event_BuscarOpcionActionPerformed
    public void Buscar_ClienteCed(ObjectContainer basep) {

        if (BuscarOpcion.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecci칩n invalida");
//            deshabilitarParametros();
        } else {
            if (BuscarOpcion.getSelectedIndex() == 1) { /// ver todos
//                deshabilitarParametros();
                Cliente Cbuscar = new Cliente(null, null, null, null, 0, null, null, null, null);

                ObjectSet result = basep.get(Cbuscar);
                CargarTabla(result);
            } else {
                if (BuscarOpcion.getSelectedIndex() == 2) {
//                    deshabilitarParametros();
                    String CeduAux = Tfieldcedu.getText();  /// buscar por cedula

                    Cliente Cbuscar = new Cliente(CeduAux, null, null, null, 0, null, null, null, null);

                    ObjectSet result = basep.get(Cbuscar);
                    CargarTabla(result);

                } else {
                    if (BuscarOpcion.getSelectedIndex() == 3) {
//                        habilitarParametros();
                        BuscarParametros(basep);  // buscar por parametro

                    }
                }
            }
        }

        //Borrar la eleccion y ponerla al inicio
        BuscarOpcion.setSelectedIndex(0);
    }

    public void habilitarParametros() {
        Tfieldnomb.setEnabled(true);
        Tfieldape.setEnabled(true);
        SpinnerEdad.setEnabled(true);
        btnH.setEnabled(true);
        btnM.setEnabled(true);
        //txtcelu.setEnabled(true);
        //TfieldCorreo.setEnabled(true);
        cbboxNacionalidad.setEnabled(true);

    }

    public void deshabilitarParametros() {
        Tfieldnomb.setEnabled(false);
        Tfieldape.setEnabled(false);
        SpinnerEdad.setEnabled(false);
        btnH.setEnabled(false);
        btnM.setEnabled(false);
        txtcelu.setEnabled(false);
        TfieldCorreo.setEnabled(false);
        cbboxNacionalidad.setEnabled(false);

    }

    public void BuscarParametros(ObjectContainer basep) {
        String NombreAux;
        String ApellidoAux;
        String NaciAux;
        int edadAux;
        String genero;

        if (Tfieldnomb.getText().isEmpty()) {

            NombreAux = null;
        } else {
            NombreAux = Tfieldnomb.getText();
        }

        if (Tfieldape.getText().isEmpty()) {

            ApellidoAux = null;
        } else {
            ApellidoAux = Tfieldape.getText();
        }

        if (cbboxNacionalidad.getSelectedIndex() == 0) {
            NaciAux = null;
        } else {
            NaciAux = cbboxNacionalidad.getSelectedItem().toString();
        }

        if ((Integer) SpinnerEdad.getValue() < 18 || (Integer) SpinnerEdad.getValue() > 65) {

            edadAux = 0;
        } else {
            edadAux = (Integer) SpinnerEdad.getValue();
        }
        if (btnH.isSelected()) {
            genero = btnH.getText();
        } else {
            if (btnM.isSelected()) {
                genero = btnM.getText();
            } else {

                genero = null;
            }
        }

        if (NombreAux == null && ApellidoAux == null && edadAux == 0 && NaciAux == null && genero == null) {
            JOptionPane.showMessageDialog(null, "Aun no ha ingresado los parametros");
//            Nombre.setEditable(true);
//            Apellido.setEditable(true);
//            Ciudad.setEditable(true);
//            Edad.setEnabled(true);
        } else {
            Cliente Cbuscar = new Cliente(null, NombreAux, ApellidoAux, genero, edadAux, null, null, NaciAux, null);

            ObjectSet result = basep.get(Cbuscar);
            CargarTabla(result);
//            Nombre.setEditable(true);
//            Apellido.setEditable(true);
//            Ciudad.setEditable(true);
//            Edad.setEnabled(true);
        }
    }

    public void Eliminar_Cliente(ObjectContainer basep) {

        //Cliente Einterfaz = new Cliente();//Crear un objeto de la clase Estudiantes para traer el metodo Comprobar_Estudiantes
        if (Tfieldcedu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "cedula no valido");
        } else {

            String cedu = Tfieldcedu.getText();
            Cliente Celiminar = new Cliente(cedu, null, null, null, 0, null, null, null, null);
            ObjectSet result = basep.get(Celiminar);

            if (!Comprobar_Cliente(basep, cedu)) {

                JOptionPane.showMessageDialog(null, "El cliente no existe en la base de datos");

            } else {

                Cliente clienteeeliminar = (Cliente) result.next();

                basep.delete(clienteeeliminar);
                JOptionPane.showMessageDialog(null, "El cliente fue eliminado de la base de datos exitosamente");
            }

        }

        //Borrar el campo de texto
        Tfieldcedu.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BuscarOpcion;
    private javax.swing.JSpinner SpinnerEdad;
    private javax.swing.JTextField TfieldCorreo;
    private javax.swing.JTextField Tfieldape;
    private javax.swing.JTextField Tfieldcedu;
    private javax.swing.JTextField Tfieldnomb;
    private javax.swing.JRadioButton btnH;
    private javax.swing.JRadioButton btnM;
    private javax.swing.JButton btncargardatos;
    private javax.swing.JButton btneliminar;
    private javax.swing.ButtonGroup btngrupSexo;
    private javax.swing.JButton btningresar;
    private javax.swing.JButton btnmod;
    private javax.swing.JButton btnreport;
    private javax.swing.JComboBox<String> cbboxNacionalidad;
    private com.toedter.calendar.JDateChooser jDnacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePersona;
    private javax.swing.JTextField txtcelu;
    // End of variables declaration//GEN-END:variables
}
